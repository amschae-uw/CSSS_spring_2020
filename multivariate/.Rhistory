knitr::opts_chunk$set(echo = TRUE)
height <- as.data.frame.vector(68 73 67 64 76)
height <- as.numeric(68 73 67 64 76)
height <- as.numeric(68, 73, 67, 64, 76)
height <- as.data.frame(68, 73, 67, 64, 76)
height <- as.data.frame(height, 68, 73, 67, 64, 76)
data <- as.data.frame(matrix(1:9, nrow = 3, ncol = 3))
data <- as.data.frame(matrix(68 140 9.5, nrow = 3, ncol = 3))
data <- as.data.frame(matrix(68, 140, 9.5, nrow = 3, ncol = 3))
data <- as.data.frame(matrix(1:1, nrow = 3, ncol = 3))
data <- as.data.frame(matrix(1:1, nrow = 5, ncol = 3))
data$height <- 68 73
data$height <- c(68 73)
data$height <- c(68, 73)
data$height <- c(68, 73, 67, 64, 76)
data$weight <- c(140, 185, 165, 120, 210)
head(data)
data$shoesize <- c(9.5, 12, 11, 10, 12)
data <- as.data.frame(matrix(1:1, nrow = 5, ncol = 0))
data$height <- c(68, 73, 67, 64, 76)
data$weight <- c(140, 185, 165, 120, 210)
data$shoesize <- c(9.5, 12, 11, 10, 12)
head(data)
summary(data$height)
data$height <- data$height-69.6
summary(data$height)
summary(data$weight)
summary(data$weight)
data$weight <- data$weight-164
summary(data$weight)
summary(data$shoesize)
summary(data$shoesize)
data$shoesize <- data$shoesize-10.9
summary(data$shoesize)
standardize(data$height)
install.packages("robustHD")
library(robustHD)
data <- as.data.frame(matrix(1:1, nrow = 5, ncol = 0))
data$height <- c(68, 73, 67, 64, 76)
data$weight <- c(140, 185, 165, 120, 210)
data$shoesize <- c(9.5, 12, 11, 10, 12)
standardize(data$height)
summary(data$height)
data$newheight<- standardize(data$height)
summary(data$newheight)
data$newweight<- standardize(data$weight)
summary(data$newweight)
data$newshoe<- standardize(data$shoesize)
summary(data$newshoe)
library(philentropy)
install.packages("philenthropy")
install.packages("philentropy")
library(philentropy)
# compute the Euclidean Distance with default parameters
distance(data, method = "euclidean")
distance(data, method = "euclidean", use.row.names = TRUE)
data <- as.data.frame(matrix(1:1, nrow = 5, ncol = 0))
data$height <- c(68, 73, 67, 64, 76)
data$weight <- c(140, 185, 165, 120, 210)
data$shoesize <- c(9.5, 12, 11, 10, 12)
data$height<- standardize(data$height)
summary(data$newheight)
data$weight<- standardize(data$weight)
summary(data$newweight)
data$shoesize<- standardize(data$shoesize)
summary(data$newshoe)
head(data)
((.70+.54)^2+(.59-.03)^2+(.96-.09)^2)^.5
((.70+.54)^2+(.59-.03)^2+(.96-.09)^2)^.5
data<- read.csv(wa_election)
data<- read.csv(wa_election.csv)
read.csv(wa_election.csv)
data<- read.csv("wa_election.csv")
county.clusters <- cutree(tree = county.tree, k)
county.clusters <- cutree(tree = data$county.tree, k)
install.packages(c("corrplot", "maps"))
dist(data)
distraw <- dist(data[,vars])
distraw <- dist(data)
diststd <- dist(scale(data))
distraw
hclust(distraw, method="average")
avclust <- hclust(distraw, method="average")
plot(avclust)
cutree(tree = avclust, 3)
county.clusters <- cutree(tree = avclust, 3)
aggregate(election2012[,-1], FUN = mean, by = list(county.clusters))
aggregate(data$election2012[,-1], FUN = mean, by = list(county.clusters))
county.clusters <- cutree(tree = avclust, 3)
avg.value <- aggregate(data$election2012[,-1], FUN = mean, by = list(county.clusters))
c(county.clusters[1:26],
rep(county.clusters[27],2),
rep(county.clusters[28],3),
county.clusters[29:39])
colors < - c("salmon", "plum", "skyblue")
c(county.clusters[1:26],
rep(county.clusters[27],2),
rep(county.clusters[28],3),
county.clusters[29:39])
colors <- c("salmon", "plum", "skyblue")
map(database = "county", region = "washington",fill = T, col = colors[clusters.for.map])
library(maps)
library(maps)
clusters.for.map <- c(county.clusters[1:26],
rep(county.clusters[27],2),
rep(county.clusters[28],3),
county.clusters[29:39])
colors <- c("salmon", "plum", "skyblue")
map(database = "county", region = "washington",fill = T, col = colors[clusters.for.map])
map.text(database = "county", region = "washington", add = T, font =2, cex= .6)
legend(x = "bottomright", col = colors, pch = 20,
legend = paste(c(1:3)), title = "Cluster", ncol = 3, cex = .8, xpd = T, inset = c(0, -.05))
data$election2012
data
aggregate(election2012[,-1], FUN = mean, by = list(county.clusters))
avg.value <- aggregate(data[,-1], FUN = mean, by = list(county.clusters))
aggregate(data[,-1], FUN = mean, by = list(county.clusters))
singclust <- hclust(distraw, method="single")
plot(singclust)
county.clusters <- cutree(tree = avclust, 3)
avg.value <- aggregate(data[,-1], FUN = mean, by = list(county.clusters))
clusters.for.map <- c(county.clusters[1:26],
rep(county.clusters[27],2),
rep(county.clusters[28],3),
county.clusters[29:39])
colors <- c("salmon", "plum", "skyblue")
map(database = "county", region = "washington",fill = T, col = colors[clusters.for.map])
map.text(database = "county", region = "washington", add = T, font =2, cex= .6)
legend(x = "bottomright", col = colors, pch = 20,
legend = paste(c(1:3)), title = "Cluster", ncol = 3, cex = .8, xpd = T, inset = c(0, -.05))
county.clusters <- cutree(tree = singclust, 2)
avg.value <- aggregate(data[,-1], FUN = mean, by = list(county.clusters))
clusters.for.map <- c(county.clusters[1:26],
rep(county.clusters[27],2),
rep(county.clusters[28],3),
county.clusters[29:39])
colors <- c("salmon", "plum", "skyblue")
map(database = "county", region = "washington",fill = T, col = colors[clusters.for.map])
map.text(database = "county", region = "washington", add = T, font =2, cex= .6)
legend(x = "bottomright", col = colors, pch = 20,
legend = paste(c(1:3)), title = "Cluster", ncol = 3, cex = .8, xpd = T, inset = c(0, -.05))
county.clusters <- cutree(tree = singclust, 2)
avg.value <- aggregate(data[,-1], FUN = mean, by = list(county.clusters))
clusters.for.map <- c(county.clusters[1:26],
rep(county.clusters[27],2),
rep(county.clusters[28],3),
county.clusters[29:39])
colors <- c("salmon", "plum")
map(database = "county", region = "washington",fill = T, col = colors[clusters.for.map])
map.text(database = "county", region = "washington", add = T, font =2, cex= .6)
legend(x = "bottomright", col = colors, pch = 20,
legend = paste(c(1:3)), title = "Cluster", ncol = 3, cex = .8, xpd = T, inset = c(0, -.05))
county.clusters <- cutree(tree = singclust, 2)
avg.value <- aggregate(data[,-1], FUN = mean, by = list(county.clusters))
clusters.for.map <- c(county.clusters[1:26],
rep(county.clusters[27],2),
rep(county.clusters[28],3),
county.clusters[29:39])
colors <- c("salmon", "plum")
map(database = "county", region = "washington",fill = T, col = colors[clusters.for.map])
map.text(database = "county", region = "washington", add = T, font =2, cex= .6)
legend(x = "bottomright", col = colors, pch = 20,
legend = paste(c(1:3)), title = "Cluster", ncol = 2, cex = .8, xpd = T, inset = c(0, -.05))
county.clusters <- cutree(tree = singclust, 2)
avg.value <- aggregate(data[,-1], FUN = mean, by = list(county.clusters))
clusters.for.map <- c(county.clusters[1:26],
rep(county.clusters[27],2),
rep(county.clusters[28],3),
county.clusters[29:39])
colors <- c("salmon", "plum")
map(database = "county", region = "washington",fill = T, col = colors[clusters.for.map])
map.text(database = "county", region = "washington", add = T, font =2, cex= .6)
legend(x = "bottomright", col = colors, pch = 20,
legend = paste(c(1:2)), title = "Cluster", ncol = 3, cex = .8, xpd = T, inset = c(0, -.05))
county.clusters <- cutree(tree = singclust, 2)
avg.value <- aggregate(data[,-1], FUN = mean, by = list(county.clusters))
clusters.for.map <- c(county.clusters[1:26],
rep(county.clusters[27],2),
rep(county.clusters[28],3),
county.clusters[29:39])
colors <- c("salmon", "plum")
map(database = "county", region = "washington",fill = T, col = colors[clusters.for.map])
map.text(database = "county", region = "washington", add = T, font =2, cex= .6)
legend(x = "bottomright", col = colors, pch = 20,
legend = paste(c(1:2)), title = "Cluster", ncol = 2, cex = .8, xpd = T, inset = c(0, -.05))
